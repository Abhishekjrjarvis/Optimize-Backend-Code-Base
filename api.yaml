swagger: "2.0"
info:
  title: qviple.com API
  description: This is qviple.com API Documentation
  version: one


# host: 18.205.27.165
# basePath: /api
schemes: [http, https]
# schemes: 
#   - http


#Return Users From get request
paths:

  #This is for the login and logout related 

  /api/v1/auth/login:
    get:
      tags:
        - Login And Logout Api
      summary: Check user or institute is login or not -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK
    post:  
      tags:
        - Login And Logout Api
      summary: Login user or institute or super admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insUserName
              - insPassword
            properties:
              insUserName:
                type: string
              insPassword:
                type: string
      responses:
        "200":
          description: OK

  /api/v1/auth/login:
    post:
      tags:
        - Login And Logout Api
      summary: Login user or institute or super admin -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insUserName
              - insPassword
            properties:
              insUserName:
                type: string
              insPassword:
                type: string
      responses:
        "200":
          description: OK

  /api/v1/auth/logout:
    get:
      tags:
        - Login And Logout Api
      summary: Logout your account -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK

    #This is for all account forget process 

  /api/v1/auth/user/forgot:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Forget Password with username -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
                description: Enter Password
      responses:
        "200":
          description: OK

  /api/v1/auth/user/forgot/{fid}:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Forget Password verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: Enter the id of user or institute
        - in: body
          name: body
          schema:
            type: object
            required:
              - userOtpCode
            properties:
              userOtpCode:
                type: string
                description: Enter OTP, which send you mobile number
      responses:
        "200":
          description: OK

  /api/v1/auth/user/reset/password/{rid}:
    post:
      tags:
        - Forgot Password Related Authentication
      summary: Create New Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: rid
          required: true
          type: string
          description: Enter the id of user or institute
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPassword
              - userRePassword
            properties:
              userPassword:
                type: string
                description: Enter New Password
              userRePassword:
                type: string
                description: Enter New Confirm Password
      responses:
        "200":
          description: OK

  # User Authentication Module

  /api/v1/auth/user-detail:
    post:
      tags:
        - User Authentication
      summary: User Mobile Authentication -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPhoneNumber
              - status
            properties:
              userPhoneNumber:
                type: string
                description: Enter a OTP which send you mobile number
              status:
                type: string
                description: Enter a status Not Verified

      responses:
        "200":
          description: OK

  /api/v1/auth/user-detail-verify/{id}:
    post:
      tags:
        - User Authentication
      summary: User Mobile Authentication Verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is user phone number
        - in: body
          name: body
          schema:
            type: object
            required:
              - userOtpCode
            properties:
              userOtpCode:
                type: string
                description: Enter a OTP which send you mobile number

      responses:
        "200":
          description: OK

  /api/v1/auth/profile-creation/{id}:
    post:
      tags:
        - User Authentication
      summary: User registration process -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is user phone number
        - in: formData
          name: file
          type: file
          required: true
          description: upload your user profile image
        - in: formData
          name: userLegalName
          type: string
          required: true
          description: Enter a User full Name
        - in: formData
          name: username
          type: string
          required: true
          description: Enter a user username as unique
        - in: formData
          name: userGender
          type: string
          required: true
          description: Enter a gender
        - in: formData
          name: userDateOfBirth
          type: string
          required: true
          description: Enter a Date of Birth
      responses:
        "200":
          description: OK

  /api/v1/auth/create-user-password/{id}:
    post:
      tags:
        - User Authentication
      summary: User create Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter the id of user which provide by registration process
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPassword
              - userRePassword
            properties:
              userPassword:
                type: string
                description: Enter Password
              userRePassword:
                type: string
                description: Enter confirm Password
      responses:
        "200":
          description: OK


   #This is for the User side API
  /api/v1/user/{id}/dash/query:
    get:
      tags:
        - User Profile API
      summary: User dashboard page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK


  /api/v1/user/post/{id}/all/user/profile/posts:
    get:
      tags:
        - User Profile API
      summary: User All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/personal/info/{id}:
    patch:
      tags:
        - User Profile API
      summary: Update User Profile Details (Only details part) -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: body
          name: body
          schema:
            type: object
            properties:
              userDateOfBirth:
                type: string
              userLegalName:
                type: string
              userGender:
                type: string
              userAddress:
                type: string
              userAbout:
                type: string
              userHobbies:
                type: string
              userEmail:
                type: string
              userEducation:
                type: string
              userAddress:
                type: string
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/profile:
    get:
      tags:
        - User Profile API
      summary: User Profile page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/ins-announcement:
    get:
      tags:
        - User Profile API
      summary: User side Institute Announcement Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/setting/personal:
    get:
      tags:
        - User Profile API
      summary: User setting personal info page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/switch/account:
    get:
      tags:
        - User Profile API
      summary: User setting switch account page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/referals/q-coins:
    get:
      tags:
        - User Profile API
      summary: User setting referals Q-coin page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK


  /api/v1/user/{uid}/followers-array:
    get:
      tags:
        - User Profile API
      summary: User all followers List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/following-array:
    get:
      tags:
        - User Profile API
      summary: User all following User List -(verified) 
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{uid}/circle-array:
    get:
      tags:
        - User Profile API
      summary: User all circle List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/{id}/all-three-array:
    get:
      tags:
        - User Profile API
      summary: User all 3-Follow List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: OK

  
  /api/v1/user/{id}/deactivate/account:
    post:
      tags:
        - User Profile API
      summary: Deactivate User A/c for atleast 2  -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - password
              - status
              - ddate
            properties:
              password:
                type: string
                description: Enter your A/c password
              status:
                type: string
                description: Enter Deactivated Text
              ddate:
                type: string
                description: Enter Date after 2 days
      responses:
        "200":
          description: OK

  /api/v1/user/phone/info/{id}:
    post:
      tags:
        - User Profile API
      summary: User Phone No. Update Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - userPhoneNumber
            properties:
              userPhoneNumber:
                type: string
                description: Enter mobile number

      responses:
        "200":
          description: OK

  /api/v1/user/{id}/recovery-mail:
    post:
      tags:
        - User Profile API
      summary: User Recovery Mail Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - recoveryMail
            properties:
              recoveryMail:
                type: string
                description: Enter Recovery Mail

      responses:
        "200":
          description: OK

  /api/v1/user/follow/institute/:
    patch:
      tags:
        - User Profile API
      summary: Follow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - InsfollowId
            properties:
              InsfollowId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/unfollow/institute/:
    patch:
      tags:
        - User Profile API
      summary: UnFollow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - InsfollowId
            properties:
              InsfollowId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/user/follow/user/:
    patch:
      tags:
        - User Profile API
      summary: Follow User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userFollowId
            properties:
              userFollowId:
                type: string
                description: follow User Id
      responses:
        "200":
          description: OK

  /api/v1/user/unfollow/user/:
    patch:
      tags:
        - User Profile API
      summary: UnFollow User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - userFollowId
            properties:
              userFollowId:
                type: string
                description: follow User Id
      responses:
        "200":
          description: OK

  /api/v1/user/circle/user/:
    patch:
      tags:
        - User Profile API
      summary: Circle User to User Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: circle User Id
      responses:
        "200":
          description: OK
  
  /api/v1/user/uncircle/user/:
    patch:
      tags:
        - User Profile API
      summary: UnCircle User to User Api (currently depreceated)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: Uncircle User Id
      responses:
        "200":
          description: OK


  #User Dashboard API

  /api/v1/user/post/{id}/all/user/posts:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/user/post/{id}:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create only with text -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: string
                  description: one user id
      responses:
        "200":
          description: OK
 
  /api/v1/user/post/{id}/image:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create text and image -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post multiple image
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your post multiple image
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/video:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post create text and video -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post video
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK
          
  /api/v1/user/post/update/{pid}:
    patch:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post update with their visibility -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - postStatus
            properties:
              postStatus:
                type: string
                description: status should be "Anyone" or "Private"
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/deleted/{pid}:
    delete:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post deleted permanently -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/tag/{uid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In User post Added tag people list which user want to tag -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          description: type here name or username         
      responses:
        "200":
          description: OK

  /api/v1/user/post/reaction/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: This is list of people who like that particular post that is reaction -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/post/like/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post like and unlike -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/save/{pid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: User post save and unsave -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/user/post/comment/{id}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get User one post all comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Post User one post comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK

  /api/v1/user/post/comment/child/{pcid}:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment, child or reply comment limit to get all reply comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is comment id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment, child or reply comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is Comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - comment
              - uid
            properties:
              comment:
                type: string
                description: Type here reply comments
              uid:
                type: string
                description: This is user id which reply to comment              
      responses:
        "200":
          description: OK

  /api/v1/user/post/{id}/comment/child/like/{cid}/:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: In post one comment like and dislike -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
      responses:
        "200":
          description: OK

  /api/v1/all/staff/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Mentors List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/all/user/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Users List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/all/institute/list/data:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Institute List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/user/dashboard/{id}/notify:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Get All Notifications Of Users -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
      
  
  /api/v1/user/{id}/user-post/{uid}/report:
    post:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: Report User's Post By User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - reportStatus
            properties:
              reportStatus:
                type: string
                description: Enter Report Content
      responses:
        "200":
          description: OK

  
  /api/v1/user/{id}/all/star-announcement:
    get:
      tags:
        - User DashBoard API (including Post, Explore Tab, Notification, Announcement)
      summary: All Star Announcement User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  #This is for universal search of user

  /api/v1/search/user/{id}/allsearch:
    get:
      tags:
        - user-universal-search
      summary: user-universal-search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The user ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


   #This is staff and student joining Related Api

  /api/v1/ins/{id}/staff-code:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Staff Code for joining by Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{sid}/staff-status:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Staff Status for Application Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Staff id
      responses:
        "200":
          description: OK

  /api/v1/ins/{uid}/staffform/{id}:
    post:
      tags:
        - Staff-Student-Joining-All-API
      summary: Staff joining form apply to Institute -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as staff
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id which search by user to apply for as staff
        - in: formData
          name: file
          type: file
          required: true
          description: upload your staff profile photo
        - in: formData
          name: staffCode
          type: string
          required: true
          description: This is staff code to join institute which provided by the institute
        - in: formData
          name: staffFirstName
          type: string
          required: true
          description: staff first name
        - in: formData
          name: StaffMiddleName
          type: string
          required: true
          description: staff middle name
        - in: formData
          name: staffLastName
          type: string
          required: true
          description: staff last name
        - in: formData
          name: staffDOB
          type: string
          required: true
          description: staff staffDOB
        - in: formData
          name: staffGender
          type: string
          required: true
          description: staff staffGender
        - in: formData
          name: staffNationality
          type: string
          required: true
          description: staff staffNationality
        - in: formData
          name: staffMTongue
          type: string
          required: true
          description: staff staffMTongue
        - in: formData
          name: staffMotherName
          type: string
          required: true
          description: staff staffMotherName
        - in: formData
          name: staffCast
          type: string
          required: true
          description: staff staffCast
        - in: formData
          name: staffCastCategory
          type: string
          required: true
          description: staff staffCastCategory
        - in: formData
          name: staffReligion
          type: string
          required: true
          description: staff staffReligion
        - in: formData
          name: staffBirthPlace
          type: string
          required: true
          description: staff staffBirthPlace
        - in: formData
          name: staffDistrict
          type: string
          required: true
          description: staff staffDistrict
        - in: formData
          name: staffState
          type: string
          required: true
          description: staff staffState
        - in: formData
          name: staffAddress
          type: string
          required: true
          description: staff staffAddress
        - in: formData
          name: staffPhoneNumber
          type: string
          required: true
          description: staff staffPhoneNumber
        - in: formData
          name: staffAadharNumber
          type: string
          required: true
          description: staff staffAadharNumber
        - in: formData
          name: staffQualification
          type: string
          required: true
          description: staff staffQualification
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card front side photo  
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card back side photo           
      responses:
        "200":
          description: OK 

  
  /api/v1/ins/{id}/student-code:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Student Code for joining by Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{sid}/student-status:
    get:
      tags:
        - Staff-Student-Joining-All-API
      summary: Get Student Status for Application Status -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
      responses:
        "200":
          description: OK

  /api/v1/ins/{uid}/studentform/{id}:
    post:
      tags:
        - Staff-Student-Joining-All-API
      summary: Student joining form apply to Institute -(verified )
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is user id which apply to institute as student
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id which search by user to apply for as student
        - in: formData
          name: file
          type: file
          required: true
          description: upload your student profile photo
        - in: formData
          name: studentCode
          type: string
          required: true
          description: This is student code to join class which provided by the class Teacher
        - in: formData
          name: studentFirstName
          type: string
          required: true
          description: student first name
        - in: formData
          name: studentMiddleName
          type: string
          required: true
          description: student middle name
        - in: formData
          name: studentLastName
          type: string
          required: true
          description: student last name
        - in: formData
          name: studentDOB
          type: string
          required: true
          description: student studentDOB
        - in: formData
          name: studentGender
          type: string
          required: true
          description: student studentGender
        - in: formData
          name: studentNationality
          type: string
          required: true
          description: student studentNationality
        - in: formData
          name: studentMTongue
          type: string
          required: true
          description: student studentMTongue
        - in: formData
          name: studentMotherName
          type: string
          required: true
          description: student studentMotherName
        - in: formData
          name: studentCast
          type: string
          required: true
          description: student studentCast
        - in: formData
          name: studentCastCategory
          type: string
          required: true
          description: student studentCastCategory
        - in: formData
          name: studentReligion
          type: string
          required: true
          description: student studentReligion
        - in: formData
          name: studentBirthPlace
          type: string
          required: true
          description: student studentBirthPlace
        - in: formData
          name: studentDistrict
          type: string
          required: true
          description: student studentDistrict
        - in: formData
          name: studentState
          type: string
          required: true
          description: student studentState
        - in: formData
          name: studentAddress
          type: string
          required: true
          description: student studentAddress
        - in: formData
          name: studentPhoneNumber
          type: string
          required: true
          description: student studentPhoneNumber
        - in: formData
          name: studentAadharNumber
          type: string
          required: true
          description: student studentAadharNumber
        - in: formData
          name: studentParentsName
          type: string
          required: true
          description: student studentParentsName
        - in: formData
          name: studentParentsPhoneNumber
          type: string
          required: true
          description: student studentParentsPhoneNumber
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card front side photo  
        - in: formData
          name: file
          type: file
          required: true
          description: upload your addhar card back side photo     
      responses:
        "200":
          description: OK


  #Staff Member's Tab

  /api/v1/user/{uid}/staff-role:
    get:
      tags:
        - Staff-Member-Tab
      summary: User All Applied Staff Role -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK

  /api/v1/user/staffdesignationdata/{sid}:
    get:
      tags:
        - Staff-Member-Tab
      summary: Staff All Designation Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id
      responses:
        "200":
          description: OK

  /api/v1/avail/attendence/status/staff/{sid}:
    get:
      tags:
        - Staff-Member-Tab
      summary: Show Staff Attendence At Calendar (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent         
      responses:
        "200":
          description: OK


  # Student Member's Tab

  /api/v1/user/{uid}/student-role:
    get:
      tags:
        - Student-Member-Tab
      summary: User All Applied Student Role -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK

  /api/v1/user/studentdesignationdata/{sid}:
    get:
      tags:
        - Student-Member-Tab
      summary: Student All Member Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is student id
      responses:
        "200":
          description: OK

  /api/v1/avail/attendence/status/student/{sid}:
    get:
      tags:
        - Student-Member-Tab
      summary: Show Student Attendence At Calendar (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is student ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent       
      responses:
        "200":
          description: OK


  /api/v1/ins/staffdepartment/{did}:
    get:
      tags:
        - Staff-Department-Head
      summary: One Department profile Data -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK


  /api/v1/ins/staff/department-info/{did}:
    post:
      tags:
        - Staff-Department-Head
      summary: One Department info/about update by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - dAbout
              - dEmail
              - dPhoneNumber
            properties:
              dAbout:
                type: string
                description: Enter Department About
              dEmail:
                type: string
                description: Enter Department Email
              dPhoneNumber:
                type: string
                description: Enter Department Phone Number (Number are allowed -10digit)
      responses:
        "200":
          description: OK

  
  /api/v1/ins/{did}/department/display-person:
    post:
      tags:
        - Staff-Department-Head
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/department/{did}/staff-array:
    get:
      tags:
        - Staff-Department-Head
      summary: In one department All Staff List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/batch-detail/{bid}:
    get:
      tags:
        - Staff-Department-Head
      summary: In one batch All classes List by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is batch id
      responses:
        "200":
          description: OK

  /api/v1/avail/batch-detail/{bid}/attend:
    get:
      tags:
        - Staff-Department-Head
      summary: Get Staff Data of a Batch
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
      responses:
        "200":
          description: OK
        
  /api/v1/avail/batch-detail/{bid}/attend-id:
    get:
      tags:
        - Staff-Department-Head
      summary: Get Staff Id of a batch
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch ID
      responses:
        "200":
          description: OK

  /api/v1/avail/department/{did}/staff/attendence:
    get:
      tags:
        - Staff-Department-Head
      summary: Department mark staff attendence (date - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - date
            properties:
              date:
                type: string
                description: Enter Date for finding present or absent
      responses:
        "200":
          description: OK


  /api/v1/avail/department/{did}/get/attendence/{date}:
    get:
      tags:
        - Staff-Department-Head
      summary: Attendence in class of Student retrieve by Date
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: path
          name: date
          required: true
          type: string
          description: This is Date to give in url         
      responses:
        "200":
          description: OK


  /api/v1/avail/department/holiday/{did}:
    post:
      tags:
        - Staff-Department-Head
      summary: Mark Holiday by Staff Department Head (dateStatus - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - dateStatus
              - reason
            properties:
              dateStatus:
                type: string
                description: Enter Date for finding present or absent
              reason:
                type: string
                description: Type Holiday rason       
      responses:
        "200":
          description: OK

  /api/v1/avail/holiday/{did}:
    get:
      tags:
        - Staff-Department-Head
      summary: Fetch Holiday
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department ID       
      responses:
        "200":
          description: OK

  /api/v1/avail/delHoliday/{hid}:
    get:
      tags:
        - Staff-Department-Head
      summary: Delete Holiday
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is Holiday ID       
      responses:
        "200":
          description: OK

  # Class Teacher

  /api/v1/ins/staffclass/{cid}:
    get:
      tags:
        - Staff-Class-Teacher
      summary: One class related data by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/ins/staff/class-info/{cid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: One class info/about update by staff side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - classAbout
            properties:
              classAbout:
                type: string
                description: Enter Class About 
      responses:
        "200":
          description: OK
  
  /api/v1/ins/{cid}/class/display-person:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{cid}/student/request:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Class Pending Request of Student - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
      responses:
        "200":
          description: OK

  /api/v1/ins/{cid}/student/catalog:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Class Approved Student Catalog - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/student/{cid}/approve/{sid}/depart/{did}/batch/{bid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Student Approval By Staff As Class Teacher Side (status - Approved) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/student/{cid}/reject/{sid}:
    post:
      tags:
        - Staff-Class-Teacher
      summary: Student Reject By Staff As a Class Teacher Side (status - Rejected) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK


  /api/v1/avail/staffclass/{cid}/attend:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
      responses:
        "200":
          description: OK
        
  /api/v1/avail/staffclass/{cid}/attend-id:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student by id
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
      responses:
        "200":
          description: OK

  /api/v1/avail/class/{cid}/student/attendence:
    get:
      tags:
        - Staff-Class-Teacher
      summary: class mark student attendence (date - to be date)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - date
            properties:
              date:
                type: string
                description: Enter Date for finding present or absent
      responses:
        "200":
          description: OK

  /api/v1/avail/class/{cid}/get/attendence/{date}:
    get:
      tags:
        - Staff-Class-Teacher
      summary: Attendence in class of Student retrieve by Date
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class ID
        - in: path
          name: date
          required: true
          type: string
          description: This is Date to give in url         
      responses:
        "200":
          description: OK

  

  # Subject Teacher

  /api/v1/ins/subject-detail/{suid}:
    get:
      tags:
        - Staff-Subject-Teacher
      summary: This is subject and class related data that is Subject Teacher catalog -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: suid
          required: true
          type: string
          description: This is subject id
      responses:
        "200":
          description: OK

  #This is for institute registration process 

  /api/v1/auth/ins-detail:
    post:
      tags:
        - Institute Authentication
      summary: Institute Mobile Authentication -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPhoneNumber
              - status
            properties:
              insPhoneNumber:
                type: string
                description: Enter a mobile number
              status:
                type: string
                description: Enter status Not Verified
      responses:
        "200":
          description: OK

  /api/v1/auth/ins-detail-verify/{id}:
    post:
      tags:
        - Institute Authentication
      summary: Institute Mobile Authentication Verification -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is institute phone number
        - in: body
          name: body
          schema:
            type: object
            required:
              - insOtpCode
            properties:
              insOtpCode:
                type: string
                description: Enter a OTP which send you mobile number

      responses:
        "200":
          description: OK

  /api/v1/auth/ins/register:
    post:
      tags:
        - Institute Authentication
      summary: Institute registration process -(verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your institute document
        - in: formData
          name: insName
          type: string
          required: true
          description: Enter a Intitute Name as unique
        - in: formData
          name: name
          type: string
          required: true
          description: Enter a Intitute username as unique
        - in: formData
          name: insEmail
          type: string
          required: true
          description: Enter a Intitute email as unique
        - in: formData
          name: insPhoneNumber
          type: string
          required: true
          description: provide mobile number
        - in: formData
          name: insState
          type: string
          required: true
          description: Enter a State
        - in: formData
          name: insDistrict
          type: string
          required: true
          description: Enter a district
        - in: formData
          name: insPincode
          type: string
          required: true
          description: Enter a pincode
        - in: formData
          name: insAddress
          type: string
          required: true
          description: Enter a address
        - in: formData
          name: insAbout
          type: string
          required: true
          description: Enter a about
        - in: formData
          name: insMode
          type: string
          required: true
          description: Enter a mode like offline or online or both
        - in: formData
          name: insType
          type: string
          required: true
          description: Enter a type that is college or school etc
      responses:
        "200":
          description: OK

  /api/v1/auth/ins/create-password/{id}:
    post:
      tags:
        - Institute Authentication
      summary: Institute create Password -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Enter the id of Institute which provide by registration process
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPassword
              - insRePassword
            properties:
              insPassword:
                type: string
                description: Enter Password
              insRePassword:
                type: string
                description: Enter confirm Password
      responses:
        "200":
          description: OK


  #This is for the Institute side API
  /api/v1/ins/{id}/dash:
    get:
      tags:
        - Institute Profile API
      summary: Institute dashboard page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK


  /api/v1/ins/post/{id}/all/profile/posts:
    get:
      tags:
        - Institute Profile API
      summary: Institute All Posts -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
  

  /api/v1/ins/personal/info/{id}:
    patch:
      tags:
        - Institute Profile API
      summary: Update Profile Details (only details part)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            properties:
              insName:
                type: string
              insType:
                type: string
              insEmail:
                type: string
              insPhoneNumber:
                type: string
              insAchievement:
                type: string
              insAddress:
                type: string
              insAbout:
                type: string
              insAffiliated:
                type: string
              insEstdDate:
                type: string
              insRegDate:
                type: string
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/profile:
    get:
      tags:
        - Institute Profile API
      summary: Institute profile page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/announcemnt:
    get:
      tags:
        - Institute Profile API
      summary: Institute Announcement page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/announcement/{id}:
    post:
      tags:
        - Institute Profile API
      summary: Add New Announcement -(verified)
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Institute ID
        - in: formData
          name: insAnnTitle
          type: string
          required: true
          description: Announcement Title
        - in: formData
          name: insAnnDescription
          type: string
          required: true
          description: Announcement Description
        - in: formData
          name: insAnnVisibility
          type: string
          required: true
          description: Announcement Visibility
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Photo
        - in: formData
          name: file
          type: file
          required: true
          description: upload Announcement Document
      responses:
        "200":
          description: OK

  /api/v1/ins/reply-announcement/{aid}:
    post:
      tags:
        - Institute Profile API
      summary: Reply To Announcement By user or Institute -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: aid # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Announcement ID
        - in: body
          name: body
          schema:
            type: object
            required:
              - replyText
            properties:
              replyText:
                type: string
                description: Enter Reply Text
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/setting/personal:
    get:
      tags:
        - Institute Profile API
      summary: Institute setting personal page Data -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/switch/account:
    get:
      tags:
        - Institute Profile API
      summary: Institute setting switch account page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK
  /api/v1/ins/{id}/credit/q-coins:
    get:
      tags:
        - Institute Profile API
      summary: Institute credit Q-coin page Data
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
      responses:
        "200":
          description: OK


  /api/v1/ins/phone/info/{id}:
    post:
      tags:
        - Institute Profile API
      summary: Institute Phone No. Update Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - insPhoneNumber
            properties:
              insPhoneNumber:
                type: string
                description: Enter mobile number

      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/staff/code:
    post:
      tags:
        - Institute Profile API
      summary: Institute Staff Code Generation -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - code
            properties:
              code:
                type: string
                description: Enter 5-digit code

      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/recovery-mail:
    post:
      tags:
        - Institute Profile API
      summary: Institute Recovery Mail Setting -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - recoveryMail
            properties:
              recoveryMail:
                type: string
                description: Enter Recovery Mail

      responses:
        "200":
          description: OK

  /api/v1/ins/follow/:
    patch:
      tags:
        - Institute Profile API
      summary: Follow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/ins/unfollow:
    patch:
      tags:
        - Institute Profile API
      summary: UnFollow Institute Api -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - followId
            properties:
              followId:
                type: string
                description: follow Institute Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/followers-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute Followers List of Institute and User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/following-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute Following List of Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/all-two-array:
    get:
      tags:
        - Institute Profile API
      summary: Institute all 2-Follow List -(verified)
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The Institute ID
      responses:
        "200":
          description: OK

  
  /api/v1/ins/{id}/display-person:
    post:
      tags:
        - Institute Profile API
      summary: Add Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter Staff or Student User Id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/display/person-array:
    get:
      tags:
        - Institute Profile API
      summary: Retrieve Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{did}/display-person/update:
    patch:
      tags:
        - Institute Profile API
      summary: Update Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Display Person id
        - in: body
          name: body
          schema:
            type: object
            required:
              - displayTitle
              - displayUser
            properties:
              displayTitle:
                type: string
                description: Enter Display Title
              displayUser:
                type: string
                description: Enter User Id
      responses:
        "200":
          description: OK
  
  /api/v1/ins/{id}/display-person/{did}/delete/{uid}:
    delete:
      tags:
        - Institute Profile API
      summary: Delete Display Person -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Display Person id
        - in: path
          name: uid
          required: true
          type: string
          description: This is User id
      responses:
        "200":
          description: OK


    #This is for institute side all post Related API

  /api/v1/ins/post/{id}/all/posts:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute All Posts - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create only with text - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: string
                  description: one user id
      responses:
        "200":
          description: OK
 
  /api/v1/ins/post/{id}/image:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create text and image - (Verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post multiple image
        # - in: formData
        #   name: file
        #   type: file
        #   required: true
        #   description: upload your post multiple image
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/video:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post create text and video - (Verified)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: formData
          name: file
          type: file
          required: true
          description: upload your post video
        - in: formData
          name: postTitle
          type: string
          description: type a text here for Title
        - in: formData
          name: postDescription
          type: string
          description: type a text here for Description
        - in: formData
          name: postText
          type: string
          description: type a text here for text
        - in: formData
          name: postStatus
          type: string
          required: true
          description: status should be "Anyone" or "Private"
        - in: formData
          name: people
          type: array
          items:
            type: string
            description: one user id
          description: This is all taged users ids
      responses:
        "200":
          description: OK
          
  /api/v1/ins/post/update/{pid}:
    patch:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post update with their visibility - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - postStatus
            properties:
              postStatus:
                type: string
                description: status should be "Anyone" or "Private"
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/deleted/{pid}:
    delete:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post deleted permanently - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/tag/{uid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In Institute post Added tag people list which user want to tag - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: uid
          required: true
          type: string
          description: This is institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: search
          schema:
            type: string
          description: type here name or username          
      responses:
        "200":
          description: OK

  /api/v1/ins/post/reaction/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: This is list of people who like that particular post that is reaction - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/post/like/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post like and unlike - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/save/{pid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Institute post save and unsave - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pid
          required: true
          type: string
          description: This is post id
      responses:
        "200":
          description: OK

  /api/v1/ins/post/comment/{id}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Get User one post all comment - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Post User one post comment -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - commentDescription
            properties:
              commentDescription:
                type: string
                description: Type here comments
      responses:
        "200":
          description: OK

  /api/v1/ins/post/comment/child/{pcid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment limit to get all reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is comment id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: pcid
          required: true
          type: string
          description: This is Comment id
        - in: body
          name: body
          schema:
            type: object
            required:
              - comment
              - uid
            properties:
              comment:
                type: string
                description: Type here reply comments
              uid:
                type: string
                description: This is user or institute id which reply to comment              
      responses:
        "200":
          description: OK

  /api/v1/ins/post/{id}/comment/child/like/{cid}/:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: In post one comment, child or reply comment - (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is user or institute id
        - in: path
          name: cid
          required: true
          type: string
          description: This is comment id
      responses:
        "200":
          description: OK


  /api/v1/ins/dashboard/{id}/notify:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Get All Notifications Of Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  

  /api/v1/ins/{aid}/star-announcement:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Mark As Star Announcement -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is announcement id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/all/star-announcement:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: All Star Announcement Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/ins/one/announcement/{aid}:
    get:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: One Announcement Detail Institute -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is announcement id
      responses:
        "200":
          description: OK
      

  /api/v1/ins/{id}/ins-post/{uid}/report:
    post:
      tags:
        - Institute DashBoard API (including Notification, Post, Announcement)
      summary: Report Institute's Post By User -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is User id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Post id
        - in: body
          name: body
          schema:
            type: object
            required:
              - reportStatus
            properties:
              reportStatus:
                type: string
                description: Enter Report Content
      responses:
        "200":
          description: OK

  
  #THis is for universal search of institute

  /api/v1/search/institute/{id}/allsearch:
    get:
      tags:
        - institute-universal-search
      summary: institute-universal-search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK
  /api/v1/search/{id}/department:
    get:
      tags:
        - institute-universal-search
      summary: All department which made by institute
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/student:
    get:
      tags:
        - institute-universal-search
      summary: All student which approved by classes
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/staff:
    get:
      tags:
        - institute-universal-search
      summary: All staff Approved search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/search/{id}/staffrequest:
    get:
      tags:
        - institute-universal-search
      summary: All staff Request Which is not approved by Institute search
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The institute ID
        - in: query
          name: search
          schema:
            type: string
          description: What you want to search
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  # Staff Module at Institute Side

  /api/v1/ins/{id}/staff/approve/{sid}/user/{uid}:
    post:
      tags:
        - Staff-Module
      summary: Staff Approval By Institute Side (status - Approved) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Staff User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Approved)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/staff/reject/{sid}/user/{uid}:
    post:
      tags:
        - Staff-Module
      summary: Staff Reject By Institute Side (status - Rejected) - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: path
          name: uid
          required: true
          type: string
          description: This is Staff User id
        - in: body
          name: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: Enter Status (Rejected)
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/pending-staff/list:
    get:
      tags:
        - Staff-Module
      summary: All pending staff List that is request to the institute side to approve as a staff - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK
          
  /api/v1/ins/{id}/approve-staff/list:
    get:
      tags:
        - Staff-Module
      summary: When edit the class master card to change staff then all approve staff get via api - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/staff/{id}:
    get:
      tags:
        -  Staff-Module
      summary: All full detail of one staff - (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is staff id
      responses:
        "200":
          description: OK


  # Student Module at Institute Side
  /api/v1/ins/{id}/approve-student/list:
    get:
      tags:
        - Student-Module
      summary: All Students in Student Tab at Institute Side -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/student/{id}:
    get:
      tags:
        - Student-Module
      summary: All full detail of one student -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is student id
      responses:
        "200":
          description: OK


  #This is for institute side all Department API
  
  /api/v1/ins/{id}/department:
    get:
      tags:
        - Institute Internal Departments 
      summary: All department List -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/new-department:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - dName
              - dTitle
              - sid
            properties:
              dName:
                type: string
                description: Enter Department Name
              dTitle:
                type: string
                description: Enter Department head Title (Professor, Principle)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/department-detail/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: All details of one department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{did}/one-batch:
    get:
      tags:
        - Institute Internal Departments 
      summary: One Department All Batch -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
      responses:
        "200":
          description: OK

  /api/v1/ins/addbatch/{did}/ins/{id}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Batch to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: body
          name: body
          schema:
            type: object
            required:
              - batchName
            properties:
              batchName:
                type: string
                description: Enter Batch Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/batchdetail/{bid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: Get current batch details -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: bid
          required: true
          type: string
          description: This is current batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{did}/batch-select/{bid}/:
    post:
      tags:
        - Institute Internal Departments
      summary: Set Current Batch Active -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/departmentmasterclass/{did}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Class Master to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - className
            properties:
              className:
                type: string
                description: Enter Class Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmasterclass-detail/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One department All class master -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmastersubject/{did}/:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Subject Master to the department -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            required:
              - subjectName
            properties:
              subjectName:
                type: string
                description: Enter Subject Name
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/departmentmastersubject/{did}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One department All subject master -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/ins/{id}/department/{did}/batch/{bid}:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Class to the Batch -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: body
          name: body
          schema:
            type: object
            required:
              - mcId
              - classTitle
              - classHeadTitle
              - sid
            properties:
              mcId:
                type: string
                description: Enter Class Master Id
              classTitle:
                type: string
                description: Enter class Title
              classHeadTitle:
                type: string
                description: Enter class Head Title (Professor, class Teacher)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/batch/class/{bid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One batch All Class list -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: This is batch id
      responses:
        "200":
          description: OK


  /api/v1/ins/{id}/department/{did}/batch/{bid}/class/{cid}/subject:
    post:
      tags:
        - Institute Internal Departments
      summary: Add New Subject to the Class -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: path
          name: bid
          required: true
          type: string
          description: This is Batch id
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: body
          name: body
          schema:
            type: object
            required:
              - msid
              - subjectTitle
              - sid
            properties:
              msid:
                type: string
                description: Enter Subject Master Id
              subjectTitle:
                type: string
                description: Enter subject Head Title (Professor, class Teacher)
              sid:
                type: string
                description: Enter Staff Id
      responses:
        "200":
          description: OK

  /api/v1/ins/class/{cid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One class Profile -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/ins/class/subject/{cid}:
    get:
      tags:
        - Institute Internal Departments 
      summary: One class All Subject -(verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK


  #This is for universal image
  /api/v1/all-images/{key}:
    get:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To get All Images, Videos and Documents
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
          description: It is key for an images, videos or document
      responses:
        "200":
          description: OK

  /api/v1/all-images/{id}/instiute/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Institute profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is Institute ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{id}/instiute/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Institute profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is Institute ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  #This is institute Announcement
  # /api/v1/all-images/{id}/ins-announcement/photo:
  #   patch:
  #     tags:
  #       - To get All Images, Videos and Documents
  #     summary:
  #       - To upload Institute Announcement Photo
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json'
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         schema:
  #           type: string
  #         description: This is Institute ID
  #       - in: formData
  #         name: file
  #         type: file
  #         required: true
  #         description: upload your image with images extenstion
  #     responses:
  #       "200":
  #         description: OK
  # /api/v1/all-images/{id}/ins-announcement/doc:
  #   post:
  #     tags:
  #       - To get All Images, Videos and Documents
  #     summary:
  #       - To upload Institute Announcement Document with multiple file
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json'
  #     parameters:
  #       - in: path
  #         name: id
  #         required: true
  #         schema:
  #           type: string
  #         description: This is Institute ID
  #       - in: formData
  #         name: file
  #         type: file
  #         required: true
  #         description: upload your file with images and doc extenstion
  #     responses:
  #       "200":
  #         description: OK

  /api/v1/all-images/{id}/user/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload User profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is User ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{id}/user/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload User profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: This is User ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion          
      responses:
        "200":
          description: OK
  /api/v1/all-images/{did}/department/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Department profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: did
          required: true
          schema:
            type: string
          description: This is Department ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{did}/department/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Department profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: did
          required: true
          schema:
            type: string
          description: This is Department ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{cid}/class/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Class profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: This is Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{cid}/class/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Class profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: This is Class ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{fid}/finance/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Finance profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: fid
          required: true
          schema:
            type: string
          description: This is Finance ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{fid}/finance/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Finance profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: fid
          required: true
          schema:
            type: string
          description: This is Finance ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{eid}/elearning/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: eid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{eid}/elearning/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: eid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{lid}/library/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: lid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{lid}/library/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Elearning profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: lid
          required: true
          schema:
            type: string
          description: This is Elearning ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK

  /api/v1/all-images/{aid}/admission/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Admission profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: aid
          required: true
          schema:
            type: string
          description: This is Admission ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{aid}/admission/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Admission profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: aid
          required: true
          schema:
            type: string
          description: This is Admission ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{sid}/sport/photo:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport profile photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK
  /api/v1/all-images/{sid}/sport/cover:
    patch:
      tags:
        - To get All Images, Videos and Documents
      summary:
        - To upload Sport profile cover photo
      consumes:
        - application/json
      produces:
        - application/json'
      parameters:
        - in: path
          name: sid
          required: true
          schema:
            type: string
          description: This is Sport ID
        - in: formData
          name: file
          type: file
          required: true
          description: upload your image with images extenstion
      responses:
        "200":
          description: OK


  /api/v1/notification/todevice:
    post:
      tags:
        - Push Notificcation
      summary: Flutter Push Notification 
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Dashboard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/approve-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Approve Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/pending-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Request Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/user-array:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin All Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
      responses:
        "200":
          description: OK

  /api/v1/admin/one/institute/{id}:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin View One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/approve/ins/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Approve One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK

  /api/v1/admin/{aid}/reject/ins/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin Reject One Institute
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: aid
          required: true
          type: string
          description: This is Super Admin id
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
      responses:
        "200":
          description: OK
  
  /api/v1/admin/post/{id}/all/posts:
    get:
      tags:
        - Super Admin Universal Post
      summary: Super Admin All Posts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Super Admin id
        - in: query
          name: page
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: OK

  /api/v1/admin/post/{id}:
    post:
      tags:
        - Super Admin Universal Post
      summary: Super Admin post create only with text 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Super Admin id
        - in : body
          name: body
          schema:
            type: object
            properties:
              postTitle:
                type: string
                description: type a text here for Title
              postDescription:
                type: string
                description: type a text here for Description
              postText:
                type: string
                description: type a text here for text
              postStatus:
                type: string
                decription: status should be "Anyone" or "Private"
              people:
                type: array
                description: This is all taged users ids
                items:
                  type: string
                  description: one user id
      responses:
        "200":
          description: OK

  /api/v1/attendance/institute/{id}/staff/attendance:
    get:
      tags:
        - Staff Attendance
      summary: This is give current date particular Staff Attendance id which is use in update the staff attendance api (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in: query
          name: date
          type: string
          description: This is date like (08/07/2022)
      responses:
        "200":
          description: OK

    post:
      tags:
        - Staff Attendance
      summary: Mark staff Attendance by the Intitute (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK

  /api/v1/attendance/staff/update/{said}:
    patch:
      tags:
        - Staff Attendance
      summary: Update Mark staff Attendance by the Intitute (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  Staff Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/staff-calender/{sid}:
    get:
      tags:
        - Staff Attendance
      summary: This is give the one month all attendance OR one year all attendance (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Staff id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter a month in digit that month attendance you want
        - in: query
          name: year
          schema:
            type: integer
          description: Enter a year in digit that year attendance you want
      responses:
        "200":
          description: OK

  /api/v1/attendance/class/{cid}/student/attendance:
    get:
      tags:
        - Student Attendance
      summary: This is give current date particular Student Attendance id which is use in update the Student attendance api (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in: query
          name: date
          type: string
          description: This is date like (08/07/2022)          
      responses:
        "200":
          description: OK

    post:
      tags:
        - Student Attendance
      summary: Mark Sudent Attendance by the Class Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Class id
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK

  /api/v1/attendance/student/update/{said}:
    patch:
      tags:
        - Student Attendance
      summary: Update Mark student Attendance by the Class Teacher (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: said
          required: true
          type: string
          description: This is  student Attendance id of particular date that is current date
        - in : body
          name: body
          schema:
            type: object
            properties:
              date:
                type: string
                description: only date is accept in this format like "16/07/2022"
                required: true
              present:
                type: array
                description: This is present array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
              absent:
                type: array
                description: This is absent array of staff ids like this ["62bb4dd84f87f09b9c55b625", "62bb4dd84f87f09b9c55b625"]
                items:
                  type: string
                  description: staff id
      responses:
        "200":
          description: OK
  
  /api/v1/attendance/student-calender/{sid}:
    get:
      tags:
        - Student Attendance
      summary: This is give the one month all attendance OR one year all attendance (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id
        - in: query
          name: month
          schema:
            type: integer
          description: Enter a month in digit that month attendance you want
        - in: query
          name: year
          schema:
            type: integer
          description: Enter a year in digit that year attendance you want
      responses:
        "200":
          description: OK
  
  /api/v1/class/{cid}:
    patch:
      tags:
        - Class Related Api
      summary: It is give the class code refresh every time (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK

  /api/v1/class/setting/{cid}:
    patch:
      tags:
        - Class Related Api
      summary: It is edit the Class Start Date for taking the attendance and much more (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: body
          name: body
          schema:
            type: object
            properties:
              classStartDate:
                type: string
                description: It is accept date format like "06/07/2022" only
              finalReportsSettings:
                type: object
                properties:
                  finalReport:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  gradeMarks:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  graceMarks:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show                    
                  attendance:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show                                        
                  behaviour:
                    type: boolean
                    description: if it is true then class Teacher side show the report card other wise not show
                  subjectPassingMarks:
                    type: integer
                    description: if it is true then class Teacher side show the report card other wise not show
                  aggregatePassingPercentage:
                    type: integer
                    description: if it is true then class Teacher side show the report card other wise not show                                                            
                description: It is class setting for the report card related function
      responses:
        "200":
          description: OK

  /api/v1/attendance/department/{did}/holiday:
    post:
      tags:
        - Holiday Related Api
      summary: It is create the holiday by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give reason of creating Holiday for that day
                required: true
              dates:
                type: array
                description: give the arrays of the dates
                items:
                  type: string
                  description: It is accept date format like "06/07/2022" only
      responses:
        "200":
          description: OK

  /api/v1/attendance/holiday/{did}:
    get:
      tags:
        - Holiday Related Api
      summary: It is give the holiday list that is created by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK

  /api/v1/attendance/class/{cid}/holiday:
    get:
      tags:
        - Holiday Related Api
      summary: It is give the holiday list in class side created by department head with specific months or year (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
        - in: query
          name: month
          type: integer
          description: pass the month value if month less than 10 then pass month like 07
        - in: query
          name: year
          type: integer
          description: pass the year value        
      responses:
        "200":
          description: OK

  /api/v1/attendance/holiday/{hid}/delete:
    delete:
      tags:
        - Holiday Related Api
      summary: It is give the holiday (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: hid
          required: true
          type: string
          description: This is holiday id
      responses:
        "200":
          description: OK

  /api/v1/checklist/department/{did}:
    post:
      tags:
        - Checklist Related Api
      summary: It is create the checklist by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is Department id
        - in: body
          name: body
          schema:
            type: object
            properties:
              checklistName:
                type: string
                description: Give checklistName of creating checklist
                required: true
              checklistFees:
                type: string
                description: Give checklistFees of two type that is "Yes" or "No"
              checklistAmount:
                type: integer
                description: Give checklistAmount in number only 
              ClassId:
                type: array
                description: give the arrays of the ClassId for which class(division) making the checklist
                required: true 
                items:
                  type: string
                  description: It is accept ClassId
      responses:
        "200":
          description: OK

  /api/v1/checklist/{cid}:
    get:
      tags:
        - Checklist Related Api
      summary: It is give information about one checklist is assign how many student (student list) (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
      responses:
        "200":
          description: OK  
    patch:
      tags:
        - Checklist Related Api
      summary: It is update checklist by department head (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
        - in: body
          name: body
          schema:
            type: object
            properties:
              checklistName:
                type: string
                description: Give checklistName of creating checklist
              checklistFees:
                type: string
                description: Give checklistFees of two type that is "Yes" or "No"
              checklistAmount:
                type: integer
                description: Give checklistAmount in number only 
      responses:
        "200":
          description: OK

  # /api/v1/checklist/checklist-all/new:
  #   get:
  #     tags:
  #       - Checklist Related Api
  #     summary: It is give the checklist list that is created by department head (Verified)
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     parameters:
  #       - in: query
  #         name: page
  #         schema:
  #           type: integer
  #         description: Enter a page which page data you want
  #       - in: query
  #         name: limit
  #         schema:
  #           type: integer
  #         description: Enter a limit that retrieve one time
  #     responses:
  #       "200":
  #         description: OK

  /api/v1/checklist/department/{did}/all:
    get:
      tags:
        - Checklist Related Api
      summary: It is give list of all checklist in one department side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: This is department id
      responses:
        "200":
          description: OK  

  /api/v1/checklist/class/{cid}/all:
    get:
      tags:
        - Checklist Related Api
      summary: It is give list of all checklist in one class side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is class id
      responses:
        "200":
          description: OK 

  /api/v1/checklist/{cid}/assign-student/{sid}:
    get:
      tags:
        - Checklist Related Api
      summary: It is assign the checklist  that student which student id you have pass in url (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: This is Checklist id
        - in: path
          name: sid
          required: true
          type: string
          description: This is Student id          
      responses:
        "200":
          description: OK


# This is api for the only exam and report card related
  /api/v1/exam/{did}/classmaster/{bid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total class master with their classes id(divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: it is selected Department id for creating the exam 
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for creating the exam         
      responses:
        "200":
          description: OK

  /api/v1/exam/{cmid}/subjectmaster/{bid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total Subject master with their subjects id (divisions) created in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cmid
          required: true
          type: string
          description: It is selected Class Master id for showing the subject master list 
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for showing the current batch subject list         
      responses:
        "200":
          description: OK

  /api/v1/exam/batch/{bid}:
    post:
      tags:
        - Exam Related Api
      summary: It is created exam in that particular department with according their batch id (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bid
          required: true
          type: string
          description: It is selected Batch id for creating the exam   
        - in: body
          name: body
          schema:
            type: object
            properties:
              examName:
                type: string
                description: give name of the exam
                required: true
              examType:
                type: string
                required: true
                description: give the exam type  that is "Final" or "Other"
              examMode:
                type: string
                required: true
                description: give the exam mode  that is "Offline" or "Online"
              examWeight:
                type: integer
                description: give the exam weightage, only exam type is "Other"           
              allclasses:
                type: array
                required: true 
                description: give the arrays of the classes id that is selected by the class Master
                items:
                  type: string
                  description: It is accept classes id 
              allsubject:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    subjectIds:
                      type: array
                      required: true 
                      description: give the arrays of the subjects id that is selected by the subject Master
                      items:
                        type: string
                        description: It is accept subject id 
                    subjectName:
                      type: string
                      required: true
                      description: give the name of the subject that is show in Subject Master(subjectName)
                    totalMarks:
                      type: integer
                      required: true
                      description: give the total maximum marks of that subject
                    date:
                      type: string
                      required: true
                      description: give the date which day exam is schedule of that subject and fomate (28/07/2022) 
                    startTime:
                      type: string
                      required: true
                      description: give the exam start time of that particular subject (02:00 Pm)
                    endTime:
                      type: string
                      required: true
                      description: give the exam end time of that particular subject (04:00 Pm)
                    _id:
                      type: string
                      required: true
                      description: it is Subject Master id that is selecetd when add the subject in created time                                                                                                    
      responses:
        "200":
          description: OK

  /api/v1/exam/all/{did}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the total created exams in that particular department (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: It is Department id
      responses:
        "200":
          description: OK

  /api/v1/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the details of exams with their slected subjects and classes (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id
      responses:
        "200":
          description: OK

  /api/v1/exam/subjectteacher/{sid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give the all exams list in subject Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
      responses:
        "200":
          description: OK

  /api/v1/exam/allstudents/subjectteacher/{sid}/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give all students list in that selected exam in subject Teacher side with their obtain marks in that particular subject (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id          
      responses:
        "200":
          description: OK

  /api/v1/exam/allstudents/marks/subjectteacher/{sid}:
    post:
      tags:
        - Exam Related Api
      summary: It is give all students marks in that selected exam in subject Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Subject Teacher id
        - in: body
          name: body
          schema:
            type: object
            properties:
              examId:
                type: string
                required: true
                description: give selected Exam Id in subject teacher side when give numbers 
              marks:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    studentId:
                      type: string
                      required: true
                      description: it is Student id
                    obtainMarks:
                      type: number
                      required: true
                      description: give the obtain marks of that student       
      responses:
        "200":
          description: OK

  /api/v1/exam/student/{sid}/allexam:
    get:
      tags:
        - Exam Related Api
      summary: It is give all exam list in student Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/student/{sid}/exam/{eid}:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of one exam with their subjects list with all details (time, date etc) in student Side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: path
          name: eid
          required: true
          type: string
          description: It is particular Exam id          
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/grace:
    patch:
      tags:
        - Exam Related Api
      summary: It is update the grace marks of students in class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              allsubjects:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    graceMarks:
                      type: number
                      required: true
                      description: it is grace marks of particular subject         
      responses:
        "200":
          description: OK

  /api/v1/exam/class/{cid}/settings:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card settings in class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/behaviour:
    get:
      tags:
        - Exam Related Api
      summary: It is give the behaviour of student (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK  
    post:
      tags:
        - Exam Related Api
      summary: It is created behaviour of student by class Teacher side (Verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              improvements:
                type: string
                description: Give improvements of student
                required: true
              lackIn:
                type: string
                description: Give lackin of student
              ratings:
                type: integer
                description: Give star count of student 
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/attendance:
    get:
      tags:
        - Exam Related Api
      summary: It is give details of reprot card Attendance of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/finalize:
    post:
      tags:
        - Exam Related Api
      summary: It is finalize (created final report card) reprot card of student with their details in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              totalFinalExam:
                type: number
                description: Total of all subjects final marks
                required: true
              totalOtherExam:
                type: number
                description: Total of all subjects other marks
                required: true
              totalGraceExam:
                type: number
                description: Total of all subjects grace marks 
                required: true
              totalTotalExam:
                type: number
                description: Total of all subjects wise Total marks
                required: true
              totalPercentage:
                type: number
                description: Total percentage of student
                required: true
              attendance:
                type: integer
                description: Total number of present days of student 
                required: true
              attendanceTotal:
                type: integer
                description: Total number of attendance taken by class teacher 
                required: true
              attendancePercentage:
                type: number
                description: Total percentage of student present in class that year
                required: true
              behaviourStar:
                type: integer
                description: Total star count given by class teacher in behaviour
                required: true
              behaviourImprovement:
                type: string
                description: Improvement given by class teacher in behaviour 
                required: true
              behaviourLack:
                type: string
                description: Lack given by class teacher in behaviour 
                required: true
              subjects:
                type: array
                description: give the arrays of the subject with their details
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    subjectName:
                      type: string
                      required: true
                      description: it is subject name
                    finalExamTotal:
                      type: integer
                      required: true
                      description: it is a subject wise finalExamTotal
                    finalExamObtain:
                      type: number
                      required: true
                      description: it is a subject wise finalExamObtain
                    otherExamTotal:
                      type: integer
                      required: true
                      description: it is a subject wise otherExamTotal
                    otherExamObtain:
                      type: number
                      required: true
                      description: it is a subject wise otherExamObtain
                    graceMarks:
                      type: integer
                      required: true
                      description: it is a subject wise graceMarks
                    totalMarks:
                      type: integer
                      required: true
                      description: it is a subject wise totalMarks
                    obtainTotalMarks:
                      type: number
                      required: true
                      description: it is a subject wise obtainTotalMarks                                                                                                 
      responses:
        "200":
          description: OK

  /api/v1/exam/class/student/{sid}/report/finalize/grace/update:
    patch:
      tags:
        - Exam Related Api
      summary: It is updated grace marks of student after finalize reprot card of student in class Teacher side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              subjects:
                type: array
                description: give the arrays of the subject with their id and grace marks
                required: true 
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                      description: it is a subject id
                    graceMarks:
                      type: integer
                      required: true
                      description: it is grace marks of particular subject
      responses:
        "200":
          description: OK

# For the Complaints leave and transfer

  /api/v1/compleave/student/{sid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is for create a leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give thereasone for leaving
              dates:
                type: array
                description: give the arrays of the dates 
                required: true 
                items:
                  type: string 
                  description: it is a date like format (12/08/2022)             
      responses:
        "200":
          description: OK

  /api/v1/compleave/leave/{lid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give leave details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id
      responses:
        "200":
          description: OK          
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id          
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular class Teacher id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is approve or reject the leave in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Leave id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: pass the "Accepetd" of "Rejected" here
                
      responses:
        "200":
          description: OK

  /api/v1/compleave/student/{sid}/compdest:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give name of the ClassHead(classTeacher) or Department Head(department) 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular student id
      responses:
        "200":
          description: OK
  
  /api/v1/compleave/student/{sid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of all Complaints
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id
      responses:
        "200":
          description: OK          
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for class or department
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Student id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              classHead:
                type: string
                description: It is the class (class teacher) Id
              departmentHead:
                type: string
                description: It is the department Id
              complaintType:
                type: string
                required:  true
                description: It is complaint type "Open" or "Anonymous"      
              complaintContent:
                type: string
                required: true
                description: It is complaint content  
              complaintTo:
                type: string
                required: true
                description: It is the classHeadTitle or department dTitle according with classHead or departmentHead                      
      responses:
        "200":
          description: OK

  /api/v1/compleave/class/{cid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in class side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Class id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/department/{did}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Department side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: did
          required: true
          type: string
          description: It is particular Department id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/{id}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/complaint/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give one complaints all details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id
      responses:
        "200":
          description: OK          
    put:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for Institute Admin in student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is solve complaint request by class Teacher side or Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Solved"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete particular complaint request by student side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK

#for the staff
  /api/v1/compleave/staff/{sid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular staff id
      responses:
        "200":
          description: OK
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is for create a leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular staff id
        - in: body
          name: body
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Give thereasone for leaving
              dates:
                type: array
                description: give the arrays of the dates 
                required: true 
                items:
                  type: string 
                  description: it is a date like format (12/08/2022)             
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/leave/{lid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give leave details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id
      responses:
        "200":
          description: OK          
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete leave request
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: lid
          required: true
          type: string
          description: It is particular Leave id          
      responses:
        "200":
          description: OK

  /api/v1/compleave/institute/{id}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of leave request in institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular institute id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is approve or reject the leave in institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Leave id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: pass the "Accepetd" of "Rejected" here          
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/{sid}/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give list of all Complaints in staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Staff id
      responses:
        "200":
          description: OK          
    post:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is create complaint request for institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: sid
          required: true
          type: string
          description: It is particular Staff id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              complaintType:
                type: string
                required:  true
                description: It is complaint type "Open" or "Anonymous"      
              complaintContent:
                type: string
                required: true
                description: It is complaint content  
      responses:
        "200":
          description: OK


  /api/v1/compleave/institute/{id}/staff/complaint:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give all list of complaints in Institute side of staff
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: It is particular Institute id 
        - in: query
          name: status
          required: true
          type: string
          description: It is "Unsolved" or "Solved"         
      responses:
        "200":
          description: OK

  /api/v1/compleave/staff/complaint/{cid}:
    get:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is give one complaints all details in staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id
      responses:
        "200":
          description: OK          
    patch:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is solve complaint request by Institute side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
        - in: body
          name: body
          schema:
            type: object
            properties:
              status:
                type: string
                description: give the value here "Solved"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - Complaints Leave And Transfer Related Api
      summary: It is delete particular complaint request by staff side
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cid
          required: true
          type: string
          description: It is particular Complaint id 
      responses:
        "200":
          description: OK

# =================END=====================
  /api/v1/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create One to One chat 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter User Id of chat Person
      responses:
        "200":
          description: OK
  
  /api/v1/chat:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch chats of user by its userId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:          
      responses:
        "200":
          description: OK

  
  /api/v1/chat/{id}/fetch/message:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch one chat messages
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: id
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  
  /api/v1/message/{chatId}:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch All messages of one Chat
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: chatId
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/message:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create message (socket)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
                description: Enter messaging content
              chatId:
                type: string
                description: Enter current chat Id
              replyContent:
                type: string
                description: Enter Reply Content when click on reply of particular messages
              replyIndex:
                type: string
                description: Enter Reply Content Index when click on reply of particular messages
      responses:
        "200":
          description: OK

  /api/v1/message/document:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create message with documents (Image, Gif, Pdf document, Doc) (socket)
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: upload your message document
        - in: formData
          name: content
          type: string
          required: true
          description: enter messaging content
        - in: formData
          name: chatId
          type: string
          required: true
          description: Enter current chat Id
        - in: formData
          name: replyContent
          type: string
          description: Enter Reply Content when click on reply of particular messages
        - in: formData
          name: replyIndex
          type: string
          description: Enter Reply Content Index when click on reply of particular messages
      responses:
        "200":
          description: OK

  /api/v1/message/forward:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Forward Message to one or another (socket)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              Id:
                type: array
                description: Enter Array of Chat Id where a message to be forwarded
              messageQuery:
                type: string
                description: Enter Current Message Id
              forward:
                type: boolean
                description: Enter (true / false)
      responses:
        "200":
          description: OK

  
  /api/v1/message/read/receipts/{cid}:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Mark all messages As a (Read)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK


  /api/v1/message/unread/receipts/{cid}:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Mark all messages As a (UnRead)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/message/{mid}/chat/dump/{cid}:
    delete:
      tags:
        - Qviple Socket (one to one chat)
      summary: Delete one message of one chat
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: mid
          required: true
          type: string
          description: This is message id
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK

  /api/v1/chat/:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch recents chat of logged In user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:         
      responses:
        "200":
          description: OK

  /api/v1/chat/new/group:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Group By Institute to Assign Admin as its user profile 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              users:
                type: array
                description: Enter Array of Staff for its user profile
              name:
                type: string
                description: Enter chat name
              admin:
                type: string
                description: Enter Institute Admin user profile Id
      responses:
        "200":
          description: OK

  /api/v1/chat/rename/group:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Rename Group chat 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              chatId:
                type: string
                description: Enter chat Id
              chatName:
                type: string
                description: Enter chatName
              chatDescription:
                type: string
                description: Enter Chat Description
      responses:
        "200":
          description: OK

  /api/v1/chat/remove/user/group:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Remove Staff User Profile Id from group by Group Admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: array
                description: Enter Staff User Id which want to remove
              chatId:
                type: string
                description: Enter chat Id
      responses:
        "200":
          description: OK

  /api/v1/chat/group/re/add:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Add Staff User Profile Id from group by Group Admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: array
                description: Enter Staff User Id which want to add
              chatId:
                type: string
                description: Enter chat Id
      responses:
        "200":
          description: OK

  

  /api/v1/chat/{cid}/admin/group/disable:
    patch:
      tags:
        - Qviple Socket (one to one chat)
      summary: Group Admin Disable the Group (you'll be no longer accessible)
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path
          name: cid
          required: true
          type: string
          description: This is chat id         
      responses:
        "200":
          description: OK


  /api/v1/chat/support/new/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create One to One support chat between user and super admin
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter User Id of chat Person
      responses:
        "200":
          description: OK


  /api/v1/message/support/admin/message:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Super Admin Support create new message 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              content:
                type: string
                description: Enter messaging content
              chatId:
                type: string
                description: Enter current chat Id
              userId:
                type: string
                description: Enter Sender User Id
      responses:
        "200":
          description: OK



  /api/v1/chat/support/admin/chat:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: fetch recents chat of user supports
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              userId:
                type: string
                description: Enter Sender User Id
      responses:
        "200":
          description: OK


  /api/v1/chat/user/subject/student:
    get:
      tags:
        - Qviple Socket (one to one chat)
      summary: Get Student List of Subject of Class 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:         
      responses:
        "200":
          description: OK


  /api/v1/chat/new/group/subject:
    post:
      tags:
        - Qviple Socket (one to one chat)
      summary: Create Group By Subject Teacher to Assign Admin as its user profile 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in : body
          name: body
          schema:
            type: object
            properties:
              users:
                type: array
                description: Enter Array of Student for its user profile
              name:
                type: string
                description: Enter chat name
      responses:
        "200":
          description: OK

  
  /api/v1/finance/ins/{id}/staff/{sid}:
    post:
      tags:
        - Finance Module Query
      summary: Assign and Activate Finance Module By The Institute Admin (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in: path
          name: sid
          required: true
          type: string
          description: This is staff id 
      responses:
        "200":
          description: OK

  /api/v1/finance/add/bank/details/{id}:
    post:
      tags:
        - Finance Module Query
      summary: Add Payment Bank Details as mentioned in parameters (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              bankAccountHolderName:
                type: string
                description: Enter Bank Account Holder Name
              bankAccountNumber:
                type: string
                description: Enter Bank Account Number greater than 9 digit
              bankIfscCode:
                type: string
                description: Enter Bank ISFC Code
              bankAccountPhoneNumber:
                type: string
                description: Enter Phone Number Linked with bank Account
              GSTInfo:
                type: string
                description: Enter GST Details
              businessName:
                type: string
                description: Enter Business Name
              businessAddress:
                type: string
                description: Enter Business Address
      responses:
        "200":
          description: OK


  /api/v1/finance/bank/details/{id}/update:
    patch:
      tags:
        - Finance Module Query
      summary: Update Payment Bank Details as mentioned in parameters (verified)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is Institute id 
        - in : body
          name: body
          schema:
            type: object
            properties:
              bankAccountHolderName:
                type: string
                description: Enter Bank Account Holder Name
              bankAccountNumber:
                type: string
                description: Enter Bank Account Number greater than 9 digit
              bankIfscCode:
                type: string
                description: Enter Bank ISFC Code
              bankAccountPhoneNumber:
                type: string
                description: Enter Phone Number Linked with bank Account
              GSTInfo:
                type: string
                description: Enter GST Details
              businessName:
                type: string
                description: Enter Business Name
              businessAddress:
                type: string
                description: Enter Business Address
      responses:
        "200":
          description: OK

  /api/v1/finance/ins/bank/{id}:
    post:
      tags:
        - Finance Module Query
      summary: Remove Payment Bank Details
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: This is  id 
      responses:
        "200":
          description: OK

  /api/v1/finance/{fid}/dashboard:
    get:
      tags:
        - Finance Module Query
      summary: Get Finance Info and Funds
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: fid
          required: true
          type: string
          description: This is Finance Id
      responses:
        "200":
          description: OK